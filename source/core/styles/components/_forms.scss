.form {
    margin-bottom: $blockMarginBottom;
}

.fieldset {
    border: 0;
    margin-bottom: $blockMarginBottom;
}

.legend {
    @include font($legendFont, $legendFontSize, $baseLineHeight);

    border: 0;
    color: $legendColor;
    display: block;
    margin-bottom: $legendMarginBottom;
}

.label {
    display: block;
    font-weight: $labelFontWeight;
    line-height: $labelLineHeight;
    margin-bottom: $labelMarginBottom;
    margin-right: $labelMarginRight;
}

.input,
.select,
.textarea {
    @include font($inputFont, $inputFontSize, $inputFontWeight);

    @if ($inputRounded) {
        @include rounded($inputRounded);
    }

    background-clip: border-box;
    background-color: $inputBackground;
    border: if($inputBorderColor, $inputBorderWidth solid $inputBorderColor, null);
    color: $inputColor;
    margin: 0 0 $inputMarginBottom 0;
    min-height: if($inputMinHeight, $inputMinHeight, null);
    min-width: if($inputMinWidth, $inputMinWidth, null);
    outline: 0;
    padding: $inputPaddingVertical $inputPaddingHorizontal;
    width: 100%;

    &:hover {
        border-color: $inputBorderColorHover;
    }

    &:focus {
        border-color: $inputBorderColorFocus;

        &:required {
            &:invalid {
                background-color: $inputBackgroundInvalid;
                border-color: $inputBorderColorInvalid;
                color: $inputColorInvalid;
            }
        }
    }

    &:invalid {
        background-color: $inputBackgroundInvalid;
        border: if($inputBorderWidthInvalid, $inputBorderWidthInvalid solid $inputBorderColorInvalid, null);
        color: $inputColorInvalid;

        &:hover {
            border-color: $inputBorderColorInvalidHover;
        }

        &:focus {
            border-color: $inputBorderColorInvalidFocus;
        }
    }

    &:required {
        background-color: $inputBackgroundRequired;
        border: if($inputBorderWidthRequired, $inputBorderWidthRequired solid $inputBorderColorRequired, null);
        color: $inputColorRequired;

        &:hover {
            border-color: $inputBorderColorRequiredHover;
        }

        &:focus {
            border-color: $inputBorderColorRequiredFocus
        }
    }
}

.input {
    @include placeholder {
        color: $inputPlaceholderColor
    };

    &.-search {
        -webkit-appearance: textfield;

        &::-webkit-search-decoration,
        &::-webkit-search-cancel-button {
            -webkit-appearance: none;
            display: none;
        }
    }

    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    }

    &[disabled],
    &.#{$inputDisabledModifier} {
        @if ($inputBorderWidthDisabled == false) {
            border: none;
        } @else {
            border-width: $inputBorderWidthDisabled;
        }

        background-color: $inputBackgroundDisabled;
        color: $inputColorDisabled;
        cursor: $inputDisabledCursor;
    }
}

.checkbox,
.radio {
    margin-bottom: $checkboxMarginBottom;
    margin-right: $checkboxMarginRight;
    padding: 0;
}

// .checkbox {
//     width: $form-check-input-width;
//     height: $form-check-input-width;
//     margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height
//     vertical-align: top;
//     background-color: $form-check-input-bg;
//     background-repeat: no-repeat;
//     background-position: center;
//     background-size: contain;
//     border: $form-check-input-border;
//     appearance: none;
//     color-adjust: exact; // Keep themed appearance for print
//     @include transition($form-check-transition);
// }

.reset,
.submit {
    -webkit-appearance: button;
    cursor: pointer;
}

.select {
    cursor: pointer;
    padding-right: $inputPaddingVertical;

    &[multiple] {
        min-height: $multiSelectMinHeight;
        vertical-align: top;

        &:after {
            content: ' ';
        }
    }
}

.textarea {
    @include resizable($textareaResize);

    line-height: $textareaLineHeight;
    min-height: $textareaMinHeight;
    padding: $textareaPaddingVertical $textareaPaddingHorizontal;
    vertical-align: top;
}
